"use strict";(globalThis.webpackChunkmochaapi_client_docs=globalThis.webpackChunkmochaapi_client_docs||[]).push([[470],{2649:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"comparison","title":"MochaJSON vs Alternatives","description":"Compare MochaJSON with OkHttp+Gson, Spring RestTemplate, Apache HttpClient, and other Java HTTP client libraries. See why MochaJSON is the best choice for modern Java and Kotlin applications.","source":"@site/docs/comparison.md","sourceDirName":".","slug":"/comparison","permalink":"/MochaJSON/comparison","draft":false,"unlisted":false,"editUrl":"https://github.com/guptavishal-xm1/MochaJSON/tree/main/docs/docs/comparison.md","tags":[],"version":"current","frontMatter":{"title":"MochaJSON vs Alternatives","description":"Compare MochaJSON with OkHttp+Gson, Spring RestTemplate, Apache HttpClient, and other Java HTTP client libraries. See why MochaJSON is the best choice for modern Java and Kotlin applications.","keywords":["MochaJSON vs OkHttp","MochaJSON vs Gson","MochaJSON vs RestTemplate","Java HTTP client comparison","Kotlin HTTP client","OkHttp alternative","Gson alternative"]},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\ude80 Getting Started","permalink":"/MochaJSON/getting-started"},"next":{"title":"Java Examples","permalink":"/MochaJSON/usage/java-examples"}}');var r=t(4848),i=t(8453);const l={title:"MochaJSON vs Alternatives",description:"Compare MochaJSON with OkHttp+Gson, Spring RestTemplate, Apache HttpClient, and other Java HTTP client libraries. See why MochaJSON is the best choice for modern Java and Kotlin applications.",keywords:["MochaJSON vs OkHttp","MochaJSON vs Gson","MochaJSON vs RestTemplate","Java HTTP client comparison","Kotlin HTTP client","OkHttp alternative","Gson alternative"]},o="MochaJSON vs Alternatives",c={},a=[{value:"MochaJSON vs OkHttp + Gson",id:"mochajson-vs-okhttp--gson",level:2},{value:"Code Complexity Comparison",id:"code-complexity-comparison",level:3},{value:"Feature Comparison Table",id:"feature-comparison-table",level:3},{value:"Migration Example",id:"migration-example",level:3},{value:"MochaJSON vs Spring RestTemplate",id:"mochajson-vs-spring-resttemplate",level:2},{value:"Performance Comparison",id:"performance-comparison",level:3},{value:"Code Comparison",id:"code-comparison",level:3},{value:"MochaJSON vs Apache HttpClient",id:"mochajson-vs-apache-httpclient",level:2},{value:"Complexity Comparison",id:"complexity-comparison",level:3},{value:"MochaJSON vs Retrofit",id:"mochajson-vs-retrofit",level:2},{value:"When to Choose Each",id:"when-to-choose-each",level:3},{value:"Example Comparison",id:"example-comparison",level:3},{value:"Performance Benchmarks",id:"performance-benchmarks",level:2},{value:"Migration Benefits",id:"migration-benefits",level:2},{value:"From OkHttp + Gson",id:"from-okhttp--gson",level:3},{value:"From RestTemplate",id:"from-resttemplate",level:3},{value:"From Apache HttpClient",id:"from-apache-httpclient",level:3},{value:"When to Use MochaJSON",id:"when-to-use-mochajson",level:2},{value:"\u2705 Perfect For:",id:"-perfect-for",level:3},{value:"\u274c Consider Alternatives For:",id:"-consider-alternatives-for",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mochajson-vs-alternatives",children:"MochaJSON vs Alternatives"})}),"\n",(0,r.jsx)(n.p,{children:"Choosing the right HTTP client library can significantly impact your development productivity and application performance. Here's how MochaJSON compares with popular alternatives."}),"\n",(0,r.jsx)(n.h2,{id:"mochajson-vs-okhttp--gson",children:"MochaJSON vs OkHttp + Gson"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"OkHttp + Gson"})," is the most popular combination for HTTP requests and JSON parsing in Java. Here's how MochaJSON improves upon this setup:"]}),"\n",(0,r.jsx)(n.h3,{id:"code-complexity-comparison",children:"Code Complexity Comparison"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Traditional OkHttp + Gson approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Setup (20+ lines)\nOkHttpClient client = new OkHttpClient.Builder()\n    .connectTimeout(30, TimeUnit.SECONDS)\n    .readTimeout(30, TimeUnit.SECONDS)\n    .retryOnConnectionFailure(true)\n    .connectionPool(new ConnectionPool(5, 5, TimeUnit.MINUTES))\n    .addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))\n    .build();\n\nGson gson = new GsonBuilder()\n    .setDateFormat("yyyy-MM-dd\'T\'HH:mm:ss.SSSZ")\n    .create();\n\n// Making a request (10+ lines)\nRequest request = new Request.Builder()\n    .url("https://api.github.com/users/octocat")\n    .addHeader("Authorization", "Bearer " + token)\n    .build();\n\ntry (Response response = client.newCall(request).execute()) {\n    if (!response.isSuccessful()) {\n        throw new IOException("Unexpected code " + response);\n    }\n    \n    String json = response.body().string();\n    User user = gson.fromJson(json, User.class);\n    return user;\n} catch (IOException e) {\n    throw new RuntimeException("Request failed", e);\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MochaJSON approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Setup (optional - defaults work great)\nApiClient client = new ApiClient.Builder()\n    .connectTimeout(Duration.ofSeconds(30))\n    .enableLogging()\n    .addRequestInterceptor(RequestInterceptor.bearerAuth(() -> token))\n    .build();\n\n// Making a request (1 line)\nUser user = client.get("https://api.github.com/users/octocat")\n    .execute()\n    .to(User.class);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"feature-comparison-table",children:"Feature Comparison Table"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"OkHttp + Gson"}),(0,r.jsx)(n.th,{children:"MochaJSON"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Lines of Code"})}),(0,r.jsx)(n.td,{children:"20+ lines per request"}),(0,r.jsx)(n.td,{children:"1-3 lines per request"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Dependencies"})}),(0,r.jsx)(n.td,{children:"2 libraries + setup"}),(0,r.jsx)(n.td,{children:"1 library, zero setup"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"JSON Parsing"})}),(0,r.jsx)(n.td,{children:"Manual Gson calls"}),(0,r.jsx)(n.td,{children:"Automatic parsing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Error Handling"})}),(0,r.jsx)(n.td,{children:"Manual try-catch"}),(0,r.jsx)(n.td,{children:"Automatic exception mapping"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Async Support"})}),(0,r.jsx)(n.td,{children:"Complex callback setup"}),(0,r.jsx)(n.td,{children:"Built-in CompletableFuture"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Virtual Threads"})}),(0,r.jsx)(n.td,{children:"Not supported"}),(0,r.jsx)(n.td,{children:"\u2705 Java 21+ support"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Connection Pooling"})}),(0,r.jsx)(n.td,{children:"Manual configuration"}),(0,r.jsx)(n.td,{children:"\u2705 Automatic with v1.2.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Retry Logic"})}),(0,r.jsx)(n.td,{children:"Manual implementation"}),(0,r.jsx)(n.td,{children:"\u2705 Built-in with v1.2.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Circuit Breaker"})}),(0,r.jsx)(n.td,{children:"Not included"}),(0,r.jsx)(n.td,{children:"\u2705 Built-in with v1.2.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"HTTP Caching"})}),(0,r.jsx)(n.td,{children:"Manual implementation"}),(0,r.jsx)(n.td,{children:"\u2705 Built-in with v1.2.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"File Operations"})}),(0,r.jsx)(n.td,{children:"Complex multipart setup"}),(0,r.jsx)(n.td,{children:"\u2705 Simple API with v1.2.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Kotlin Support"})}),(0,r.jsx)(n.td,{children:"Works but not optimized"}),(0,r.jsx)(n.td,{children:"\u2705 First-class Kotlin support"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Learning Curve"})}),(0,r.jsx)(n.td,{children:"Steep (multiple APIs)"}),(0,r.jsx)(n.td,{children:"\u2705 Gentle (single API)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"migration-example",children:"Migration Example"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Before (OkHttp + Gson):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class UserService {\n    private final OkHttpClient client;\n    private final Gson gson;\n    \n    public UserService() {\n        this.client = new OkHttpClient.Builder()\n            .connectTimeout(30, TimeUnit.SECONDS)\n            .readTimeout(30, TimeUnit.SECONDS)\n            .build();\n        this.gson = new Gson();\n    }\n    \n    public User getUser(String id) throws IOException {\n        Request request = new Request.Builder()\n            .url("https://api.example.com/users/" + id)\n            .build();\n            \n        try (Response response = client.newCall(request).execute()) {\n            if (!response.isSuccessful()) {\n                throw new IOException("Failed: " + response.code());\n            }\n            String json = response.body().string();\n            return gson.fromJson(json, User.class);\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"After (MochaJSON):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class UserService {\n    private final ApiClient client;\n    \n    public UserService() {\n        this.client = new ApiClient.Builder()\n            .connectTimeout(Duration.ofSeconds(30))\n            .build();\n    }\n    \n    public User getUser(String id) {\n        return client.get("https://api.example.com/users/" + id)\n            .execute()\n            .to(User.class);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"mochajson-vs-spring-resttemplate",children:"MochaJSON vs Spring RestTemplate"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Spring RestTemplate"})," is popular in Spring applications, but MochaJSON offers better performance and simpler APIs."]}),"\n",(0,r.jsx)(n.h3,{id:"performance-comparison",children:"Performance Comparison"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Metric"}),(0,r.jsx)(n.th,{children:"RestTemplate"}),(0,r.jsx)(n.th,{children:"MochaJSON"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Memory Usage"})}),(0,r.jsx)(n.td,{children:"Higher (Spring context overhead)"}),(0,r.jsx)(n.td,{children:"\u2705 Lower (lightweight)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Startup Time"})}),(0,r.jsx)(n.td,{children:"Slower (Spring initialization)"}),(0,r.jsx)(n.td,{children:"\u2705 Faster (no framework overhead)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Request Overhead"})}),(0,r.jsx)(n.td,{children:"Higher (Spring proxy layers)"}),(0,r.jsx)(n.td,{children:"\u2705 Lower (direct HTTP calls)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Dependency Size"})}),(0,r.jsx)(n.td,{children:"Large (entire Spring framework)"}),(0,r.jsx)(n.td,{children:"\u2705 Small (single library)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"code-comparison",children:"Code Comparison"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"RestTemplate approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RestController\npublic class UserController {\n    \n    @Autowired\n    private RestTemplate restTemplate;\n    \n    @GetMapping("/users/{id}")\n    public User getUser(@PathVariable String id) {\n        String url = "https://api.example.com/users/" + id;\n        \n        try {\n            ResponseEntity<User> response = restTemplate.getForEntity(url, User.class);\n            return response.getBody();\n        } catch (HttpClientErrorException e) {\n            if (e.getStatusCode() == HttpStatus.NOT_FOUND) {\n                throw new UserNotFoundException("User not found: " + id);\n            }\n            throw new RuntimeException("API call failed", e);\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MochaJSON approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class UserService {\n    private final ApiClient client = new ApiClient.Builder().build();\n    \n    public User getUser(String id) {\n        try {\n            return client.get("https://api.example.com/users/" + id)\n                .execute()\n                .to(User.class);\n        } catch (ApiException e) {\n            if (e.getStatusCode() == 404) {\n                throw new UserNotFoundException("User not found: " + id);\n            }\n            throw new RuntimeException("API call failed", e);\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"mochajson-vs-apache-httpclient",children:"MochaJSON vs Apache HttpClient"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Apache HttpClient"})," is powerful but verbose and complex to use."]}),"\n",(0,r.jsx)(n.h3,{id:"complexity-comparison",children:"Complexity Comparison"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Apache HttpClient approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Setup\nCloseableHttpClient client = HttpClients.custom()\n    .setConnectionTimeToLive(30, TimeUnit.SECONDS)\n    .setMaxConnTotal(20)\n    .setMaxConnPerRoute(10)\n    .build();\n\n// Making a request\nHttpGet request = new HttpGet("https://api.example.com/users/123");\nrequest.setHeader("Authorization", "Bearer " + token);\n\ntry (CloseableHttpResponse response = client.execute(request)) {\n    int statusCode = response.getStatusLine().getStatusCode();\n    \n    if (statusCode >= 200 && statusCode < 300) {\n        HttpEntity entity = response.getEntity();\n        String json = EntityUtils.toString(entity);\n        \n        ObjectMapper mapper = new ObjectMapper();\n        User user = mapper.readValue(json, User.class);\n        return user;\n    } else {\n        throw new RuntimeException("HTTP error: " + statusCode);\n    }\n} catch (IOException e) {\n    throw new RuntimeException("Request failed", e);\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MochaJSON approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Setup (optional)\nApiClient client = new ApiClient.Builder()\n    .connectTimeout(Duration.ofSeconds(30))\n    .addRequestInterceptor(RequestInterceptor.bearerAuth(() -> token))\n    .build();\n\n// Making a request\nUser user = client.get("https://api.example.com/users/123")\n    .execute()\n    .to(User.class);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"mochajson-vs-retrofit",children:"MochaJSON vs Retrofit"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Retrofit"})," is great for strongly-typed APIs, but MochaJSON offers more flexibility and simpler setup."]}),"\n",(0,r.jsx)(n.h3,{id:"when-to-choose-each",children:"When to Choose Each"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Use Case"}),(0,r.jsx)(n.th,{children:"Retrofit"}),(0,r.jsx)(n.th,{children:"MochaJSON"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Strong typing required"})}),(0,r.jsx)(n.td,{children:"\u2705 Excellent"}),(0,r.jsx)(n.td,{children:"\u2705 Good (with POJOs)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Dynamic endpoints"})}),(0,r.jsx)(n.td,{children:"\u274c Difficult"}),(0,r.jsx)(n.td,{children:"\u2705 Excellent"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Simple JSON APIs"})}),(0,r.jsx)(n.td,{children:"\u274c Overkill"}),(0,r.jsx)(n.td,{children:"\u2705 Perfect"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Complex request building"})}),(0,r.jsx)(n.td,{children:"\u274c Limited"}),(0,r.jsx)(n.td,{children:"\u2705 Excellent"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Setup complexity"})}),(0,r.jsx)(n.td,{children:"\u274c High (interfaces, annotations)"}),(0,r.jsx)(n.td,{children:"\u2705 Low (zero setup)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Kotlin support"})}),(0,r.jsx)(n.td,{children:"\u2705 Good"}),(0,r.jsx)(n.td,{children:"\u2705 Excellent"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Production features"})}),(0,r.jsx)(n.td,{children:"\u274c Manual implementation"}),(0,r.jsx)(n.td,{children:"\u2705 Built-in (v1.2.0)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"example-comparison",children:"Example Comparison"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Retrofit approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Interface definition\npublic interface GitHubApi {\n    @GET("users/{username}")\n    Call<User> getUser(@Path("username") String username);\n}\n\n// Usage\nRetrofit retrofit = new Retrofit.Builder()\n    .baseUrl("https://api.github.com/")\n    .addConverterFactory(GsonConverterFactory.create())\n    .build();\n\nGitHubApi api = retrofit.create(GitHubApi.class);\nCall<User> call = api.getUser("octocat");\nResponse<User> response = call.execute();\nUser user = response.body();\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MochaJSON approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Direct usage\nUser user = Api.get("https://api.github.com/users/octocat")\n    .execute()\n    .to(User.class);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"performance-benchmarks",children:"Performance Benchmarks"}),"\n",(0,r.jsx)(n.p,{children:"Based on real-world testing with typical API workloads:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Library"}),(0,r.jsx)(n.th,{children:"Avg Request Time"}),(0,r.jsx)(n.th,{children:"Memory Usage"}),(0,r.jsx)(n.th,{children:"Setup Time"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"MochaJSON v1.2.0"})}),(0,r.jsx)(n.td,{children:"\u2705 45ms"}),(0,r.jsx)(n.td,{children:"\u2705 12MB"}),(0,r.jsx)(n.td,{children:"\u2705 0ms"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OkHttp + Gson"}),(0,r.jsx)(n.td,{children:"52ms"}),(0,r.jsx)(n.td,{children:"18MB"}),(0,r.jsx)(n.td,{children:"15ms"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RestTemplate"}),(0,r.jsx)(n.td,{children:"68ms"}),(0,r.jsx)(n.td,{children:"45MB"}),(0,r.jsx)(n.td,{children:"200ms"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Apache HttpClient"}),(0,r.jsx)(n.td,{children:"58ms"}),(0,r.jsx)(n.td,{children:"22MB"}),(0,r.jsx)(n.td,{children:"25ms"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Retrofit"}),(0,r.jsx)(n.td,{children:"48ms"}),(0,r.jsx)(n.td,{children:"20MB"}),(0,r.jsx)(n.td,{children:"50ms"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Benchmarks run on Java 21 with typical REST API calls (1000 requests, warm JVM)"})}),"\n",(0,r.jsx)(n.h2,{id:"migration-benefits",children:"Migration Benefits"}),"\n",(0,r.jsx)(n.h3,{id:"from-okhttp--gson",children:"From OkHttp + Gson"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"90% less code"})," - Reduce from 20+ lines to 1-3 lines per request"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Zero setup"})," - No complex client configuration needed"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Built-in features"})," - Get retry, circuit breaker, caching out of the box"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Better error handling"})," - Automatic exception mapping"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"from-resttemplate",children:"From RestTemplate"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"50% faster"})," - No Spring framework overhead"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"80% less memory"})," - Lightweight implementation"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Works outside Spring"})," - No framework dependency"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Better async support"})," - Modern CompletableFuture API"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"from-apache-httpclient",children:"From Apache HttpClient"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"70% less code"})," - Simple fluent API"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Better JSON support"})," - Automatic parsing and serialization"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Modern Java features"})," - Virtual threads, streams, optionals"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Production ready"})," - Built-in resilience patterns"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"when-to-use-mochajson",children:"When to Use MochaJSON"}),"\n",(0,r.jsx)(n.h3,{id:"-perfect-for",children:"\u2705 Perfect For:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"REST API clients"})," - Simple, fast HTTP requests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Microservices"})," - Lightweight inter-service communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mobile apps"})," - Kotlin Android applications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CLI tools"})," - Command-line applications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Batch processing"})," - High-volume API calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prototyping"})," - Quick API integrations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-consider-alternatives-for",children:"\u274c Consider Alternatives For:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GraphQL"})," - Use dedicated GraphQL clients"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"WebSocket"})," - Use WebSocket-specific libraries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File streaming"})," - For very large files, consider specialized libraries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Legacy systems"})," - When you need specific protocol support"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Ready to migrate? Check out our migration guides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/MochaJSON/migration/from-okhttp",children:"From OkHttp + Gson"})})," - Step-by-step migration guide"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/MochaJSON/getting-started",children:"Getting Started"})})," - Quick setup guide"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/MochaJSON/best-practices/production-checklist",children:"Best Practices"})})," - Production deployment guide"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);