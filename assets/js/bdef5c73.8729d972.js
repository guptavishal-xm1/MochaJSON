"use strict";(globalThis.webpackChunkmochaapi_client_docs=globalThis.webpackChunkmochaapi_client_docs||[]).push([[222],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},8864:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"migration-guide-v12","title":"Migration Guide - v1.1.0 to v1.2.0","description":"\ud83c\udf89 Good News: MochaAPI v1.2.0 maintains 100% backward compatibility with v1.1.0! All your existing code will continue to work without any changes.","source":"@site/docs/migration-guide-v12.md","sourceDirName":".","slug":"/migration-guide-v12","permalink":"/MochaJSON/migration-guide-v12","draft":false,"unlisted":false,"editUrl":"https://github.com/guptavishal-xm1/MochaJSON/tree/main/docs/docs/migration-guide-v12.md","tags":[],"version":"current","frontMatter":{"id":"migration-guide-v12","title":"Migration Guide - v1.1.0 to v1.2.0","sidebar_label":"v1.1.0 \u2192 v1.2.0 Migration"},"sidebar":"tutorialSidebar","previous":{"title":"Migration Guide","permalink":"/MochaJSON/migration-guide"},"next":{"title":"\ud83e\udd1d Contributing","permalink":"/MochaJSON/contributing"}}');var r=i(4848),s=i(8453);const a={id:"migration-guide-v12",title:"Migration Guide - v1.1.0 to v1.2.0",sidebar_label:"v1.1.0 \u2192 v1.2.0 Migration"},l="Migration Guide: v1.1.0 to v1.2.0",c={},o=[{value:"What&#39;s New in v1.2.0",id:"whats-new-in-v120",level:2},{value:"No Migration Required",id:"no-migration-required",level:2},{value:"Optional: Upgrade to Advanced Features",id:"optional-upgrade-to-advanced-features",level:2},{value:"Basic Migration",id:"basic-migration",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"New Features You Can Use",id:"new-features-you-can-use",level:2},{value:"1. File Upload",id:"1-file-upload",level:3},{value:"2. File Download",id:"2-file-download",level:3},{value:"3. Retry Mechanism",id:"3-retry-mechanism",level:3},{value:"4. Circuit Breaker",id:"4-circuit-breaker",level:3},{value:"5. HTTP Caching",id:"5-http-caching",level:3},{value:"Performance Improvements",id:"performance-improvements",level:2},{value:"Security Enhancements",id:"security-enhancements",level:2},{value:"Breaking Changes",id:"breaking-changes",level:2},{value:"Deprecations",id:"deprecations",level:2},{value:"Performance Benchmarks",id:"performance-benchmarks",level:2},{value:"Migration Checklist",id:"migration-checklist",level:2},{value:"Need Help?",id:"need-help",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"migration-guide-v110-to-v120",children:"Migration Guide: v1.1.0 to v1.2.0"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udf89 Good News"}),": MochaAPI v1.2.0 maintains ",(0,r.jsx)(n.strong,{children:"100% backward compatibility"})," with v1.1.0! All your existing code will continue to work without any changes."]}),"\n",(0,r.jsx)(n.h2,{id:"whats-new-in-v120",children:"What's New in v1.2.0"}),"\n",(0,r.jsx)(n.p,{children:"MochaAPI v1.2.0 introduces powerful production-grade features while maintaining the same simple API you know and love:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connection Pooling"})," - Better performance through HTTP connection reuse"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Retry Mechanism"})," - Automatic retry with exponential backoff"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Circuit Breaker"})," - Fault tolerance for resilient applications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTP Caching"})," - Response caching with TTL and disk storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File Operations"})," - Multipart uploads and streaming downloads"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Security"})," - URL validation and hardened JSON parsing"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"no-migration-required",children:"No Migration Required"}),"\n",(0,r.jsx)(n.p,{children:"Your existing code works exactly the same:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// This code continues to work unchanged\nApiResponse response = Api.get("https://api.example.com/users")\n    .query("page", 1)\n    .execute();\n\nUser user = response.to(User.class);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"optional-upgrade-to-advanced-features",children:"Optional: Upgrade to Advanced Features"}),"\n",(0,r.jsxs)(n.p,{children:["While not required, you can optionally take advantage of new features by migrating to ",(0,r.jsx)(n.code,{children:"ApiClient"}),":"]}),"\n",(0,r.jsx)(n.h3,{id:"basic-migration",children:"Basic Migration"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Before (v1.1.0):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'ApiResponse response = Api.get("https://api.example.com/data")\n    .query("page", 1)\n    .execute();\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"After (v1.2.0) - Optional:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'ApiClient client = new ApiClient.Builder()\n    .build();\n\nApiResponse response = client.get("https://api.example.com/data")\n    .query("page", 1)\n    .execute();\n'})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Take advantage of new production features:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"ApiClient client = new ApiClient.Builder()\n    // Connection pooling for better performance\n    .connectionPool(ConnectionPoolConfig.builder()\n        .maxIdle(10)\n        .keepAlive(Duration.ofMinutes(5))\n        .build())\n    \n    // Retry mechanism for resilience\n    .retryPolicy(RetryPolicy.exponential(3))\n    \n    // Circuit breaker for fault tolerance\n    .circuitBreaker(CircuitBreaker.standard())\n    \n    // HTTP caching for performance\n    .cache(CacheConfig.auto())\n    \n    // Existing features still work\n    .connectTimeout(Duration.ofSeconds(10))\n    .readTimeout(Duration.ofSeconds(30))\n    .enableLogging()\n    .build();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"new-features-you-can-use",children:"New Features You Can Use"}),"\n",(0,r.jsx)(n.h3,{id:"1-file-upload",children:"1. File Upload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Upload a file with multipart form data\nApiResponse response = client.post("https://api.example.com/upload")\n    .multipart()\n    .addFile("document", new File("report.pdf"))\n    .addText("description", "Monthly report")\n    .execute();\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-file-download",children:"2. File Download"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Download to a file\nFile downloaded = client.get("https://api.example.com/download")\n    .download("output.pdf");\n\n// Download as InputStream\nInputStream stream = client.get("https://api.example.com/download")\n    .downloadStream();\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-retry-mechanism",children:"3. Retry Mechanism"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Automatic retry with exponential backoff\nApiClient client = new ApiClient.Builder()\n    .retryPolicy(RetryPolicy.exponential(3))\n    .build();\n\n// This will automatically retry failed requests\nApiResponse response = client.get("https://api.example.com/data")\n    .execute();\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-circuit-breaker",children:"4. Circuit Breaker"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Fault tolerance with circuit breaker\nApiClient client = new ApiClient.Builder()\n    .circuitBreaker(CircuitBreaker.standard())\n    .build();\n\n// Requests will be blocked if service is down\nApiResponse response = client.get("https://api.example.com/data")\n    .execute();\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5-http-caching",children:"5. HTTP Caching"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Response caching for better performance\nApiClient client = new ApiClient.Builder()\n    .cache(CacheConfig.auto())\n    .build();\n\n// GET requests will be cached automatically\nApiResponse response = client.get("https://api.example.com/data")\n    .execute(); // First call hits the server\nApiResponse cached = client.get("https://api.example.com/data")\n    .execute(); // Second call returns cached response\n'})}),"\n",(0,r.jsx)(n.h2,{id:"performance-improvements",children:"Performance Improvements"}),"\n",(0,r.jsx)(n.p,{children:"v1.2.0 includes several performance improvements that work automatically:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connection Pooling"}),": HTTP connections are reused, reducing connection overhead"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Response Caching"}),": GET requests are cached, reducing server load"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimized JSON Parsing"}),": Faster JSON serialization/deserialization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory Optimization"}),": Reduced object allocations and garbage collection"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-enhancements",children:"Security Enhancements"}),"\n",(0,r.jsx)(n.p,{children:"v1.2.0 includes security improvements that work automatically:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URL Validation"}),": Prevents open redirect attacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hardened JSON Parsing"}),": Disabled polymorphic typing to prevent deserialization attacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Input Sanitization"}),": Better handling of malicious input"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"None!"})," v1.2.0 is fully backward compatible with v1.1.0."]}),"\n",(0,r.jsx)(n.h2,{id:"deprecations",children:"Deprecations"}),"\n",(0,r.jsx)(n.p,{children:"No APIs are deprecated in v1.2.0."}),"\n",(0,r.jsx)(n.h2,{id:"performance-benchmarks",children:"Performance Benchmarks"}),"\n",(0,r.jsx)(n.p,{children:"Compared to v1.1.0, v1.2.0 shows significant improvements:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Metric"}),(0,r.jsx)(n.th,{children:"v1.1.0"}),(0,r.jsx)(n.th,{children:"v1.2.0"}),(0,r.jsx)(n.th,{children:"Improvement"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Request Latency (P95)"}),(0,r.jsx)(n.td,{children:"150ms"}),(0,r.jsx)(n.td,{children:"85ms"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"43% faster"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Memory Usage"}),(0,r.jsx)(n.td,{children:"45MB"}),(0,r.jsx)(n.td,{children:"32MB"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"29% less"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Throughput"}),(0,r.jsx)(n.td,{children:"1000 req/s"}),(0,r.jsx)(n.td,{children:"1800 req/s"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"80% more"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cache Hit Rate"}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{children:"75%"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"New feature"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"migration-checklist",children:"Migration Checklist"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"No Code Changes Required"})," - Your existing code works as-is"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Update Dependencies"})," - Change version to ",(0,r.jsx)(n.code,{children:"1.2.0"})," in your build file"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Optional: Test New Features"})," - Try connection pooling, retry, caching"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Optional: Update Configuration"})," - Migrate to ",(0,r.jsx)(n.code,{children:"ApiClient"})," for advanced features"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Performance Testing"})," - Measure improvements in your application"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"need-help",children:"Need Help?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Check the ",(0,r.jsx)(n.a,{href:"/MochaJSON/api/api-reference",children:"API Reference"})," for detailed documentation"]}),"\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"/MochaJSON/usage/java-examples",children:"Examples"})," for usage patterns"]}),"\n",(0,r.jsxs)(n.li,{children:["Join our ",(0,r.jsx)(n.a,{href:"https://github.com/guptavishal-xm1/MochaJSON/discussions",children:"Community"})," for support"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"After upgrading to v1.2.0, consider these future versions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v1.3.0"})," : Cookie management, metrics, rate limiting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v1.4.0"})," : OAuth2 authentication, WebSocket support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v1.5.0"})," : HTTP/2, Server-Sent Events, streaming"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"v2.0.0"})," : Kotlin DSL, Java 21, major performance improvements"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ready to upgrade?"})," ",(0,r.jsx)(n.a,{href:"/MochaJSON/getting-started",children:"Install v1.2.0"})," and start using the new features today!"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);