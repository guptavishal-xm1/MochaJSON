"use strict";(globalThis.webpackChunkmochaapi_client_docs=globalThis.webpackChunkmochaapi_client_docs||[]).push([[1],{535:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"usage/json-handling","title":"JSON Handling","description":"Advanced JSON parsing techniques with MochaAPI Client, including nested objects, arrays, and custom serialization.","source":"@site/docs/usage/json-handling.md","sourceDirName":"usage","slug":"/usage/json-handling","permalink":"/MochaJSON/usage/json-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/guptavishal-xm1/MochaJSON/tree/main/docs/docs/usage/json-handling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Kotlin Examples","permalink":"/MochaJSON/usage/kotlin-examples"},"next":{"title":"Error Handling Examples","permalink":"/MochaJSON/usage/error-handling-examples"}}');var i=s(4848),a=s(8453);const r={},l="JSON Handling",o={},c=[{value:"Basic JSON Parsing",id:"basic-json-parsing",level:2},{value:"1. Parse to Map",id:"1-parse-to-map",level:3},{value:"2. Parse to List",id:"2-parse-to-list",level:3},{value:"3. Parse to POJO",id:"3-parse-to-pojo",level:3},{value:"Nested Object Parsing",id:"nested-object-parsing",level:2},{value:"Java Example",id:"java-example",level:3},{value:"Kotlin Example",id:"kotlin-example",level:3},{value:"Array Processing",id:"array-processing",level:2},{value:"Processing JSON Arrays",id:"processing-json-arrays",level:3},{value:"Parse Array to POJO List",id:"parse-array-to-pojo-list",level:3},{value:"Request Body Serialization",id:"request-body-serialization",level:2},{value:"Java Example",id:"java-example-1",level:3},{value:"Kotlin Example",id:"kotlin-example-1",level:3},{value:"Custom JSON Mappers",id:"custom-json-mappers",level:2},{value:"Using Jackson Directly",id:"using-jackson-directly",level:3},{value:"Error Handling for JSON",id:"error-handling-for-json",level:2},{value:"Handling JSON Parsing Errors",id:"handling-json-parsing-errors",level:3},{value:"Handling Missing Fields",id:"handling-missing-fields",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Use POJOs for Type Safety",id:"1-use-pojos-for-type-safety",level:3},{value:"2. Handle Null Values",id:"2-handle-null-values",level:3},{value:"3. Use Appropriate Data Types",id:"3-use-appropriate-data-types",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"json-handling",children:"JSON Handling"})}),"\n",(0,i.jsx)(n.p,{children:"Advanced JSON parsing techniques with MochaAPI Client, including nested objects, arrays, and custom serialization."}),"\n",(0,i.jsx)(n.h2,{id:"basic-json-parsing",children:"Basic JSON Parsing"}),"\n",(0,i.jsx)(n.p,{children:"MochaAPI Client automatically handles JSON serialization and deserialization. You can parse JSON responses in three ways:"}),"\n",(0,i.jsx)(n.h3,{id:"1-parse-to-map",children:"1. Parse to Map"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\nimport java.util.Map;\n\nMap<String, Object> data = Api.get("https://jsonplaceholder.typicode.com/posts/1")\n    .execute()\n    .toMap();\n\nSystem.out.println("Title: " + data.get("title"));\nSystem.out.println("Body: " + data.get("body"));\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-parse-to-list",children:"2. Parse to List"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\nList<Object> posts = Api.get("https://jsonplaceholder.typicode.com/posts")\n    .query("userId", 1)\n    .execute()\n    .toList();\n\nSystem.out.println("Found " + posts.size() + " posts");\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-parse-to-pojo",children:"3. Parse to POJO"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\nPost post = Api.get("https://jsonplaceholder.typicode.com/posts/1")\n    .execute()\n    .to(Post.class);\n\nSystem.out.println("Title: " + post.title);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"nested-object-parsing",children:"Nested Object Parsing"}),"\n",(0,i.jsx)(n.h3,{id:"java-example",children:"Java Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\npublic class NestedExample {\n    public static void main(String[] args) {\n        User user = Api.get("https://jsonplaceholder.typicode.com/users/1")\n            .execute()\n            .to(User.class);\n        \n        System.out.println("Name: " + user.name);\n        System.out.println("Email: " + user.email);\n        System.out.println("Address: " + user.address.street + ", " + user.address.city);\n        System.out.println("Company: " + user.company.name);\n    }\n    \n    public static class User {\n        public int id;\n        public String name;\n        public String email;\n        public Address address;\n        public Company company;\n        \n        public static class Address {\n            public String street;\n            public String suite;\n            public String city;\n            public String zipcode;\n            public Geo geo;\n            \n            public static class Geo {\n                public String lat;\n                public String lng;\n            }\n        }\n        \n        public static class Company {\n            public String name;\n            public String catchPhrase;\n            public String bs;\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"kotlin-example",children:"Kotlin Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.mochaapi.client.*\n\ndata class User(\n    val id: Int,\n    val name: String,\n    val email: String,\n    val address: Address,\n    val company: Company\n)\n\ndata class Address(\n    val street: String,\n    val suite: String,\n    val city: String,\n    val zipcode: String,\n    val geo: Geo\n)\n\ndata class Geo(\n    val lat: String,\n    val lng: String\n)\n\ndata class Company(\n    val name: String,\n    val catchPhrase: String,\n    val bs: String\n)\n\nfun main() {\n    val user = Api.get("https://jsonplaceholder.typicode.com/users/1")\n        .execute()\n        .to(User::class.java)\n    \n    println("Name: ${user.name}")\n    println("Email: ${user.email}")\n    println("Address: ${user.address.street}, ${user.address.city}")\n    println("Company: ${user.company.name}")\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Sample Nested JSON Response:"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Sample Value"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"id"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"int"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Leanne Graham"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"email"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Sincere@april.biz"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"address.street"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Kulas Light"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"address.suite"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Apt. 556"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"address.city"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Gwenborough"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"address.zipcode"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"92998-3874"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"address.geo.lat"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"-37.3159"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"address.geo.lng"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"81.1496"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"company.name"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Romaguera-Crona"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"company.catchPhrase"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"Multi-layered client-server neural-net"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"company.bs"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"String"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"harness real-time e-markets"'})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"array-processing",children:"Array Processing"}),"\n",(0,i.jsx)(n.h3,{id:"processing-json-arrays",children:"Processing JSON Arrays"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\nimport java.util.List;\nimport java.util.Map;\n\npublic class ArrayExample {\n    public static void main(String[] args) {\n        // Get array of posts\n        List<Object> posts = Api.get("https://jsonplaceholder.typicode.com/posts")\n            .query("userId", 1)\n            .query("_limit", 3)\n            .execute()\n            .toList();\n        \n        System.out.println("Found " + posts.size() + " posts");\n        \n        // Process each post\n        for (int i = 0; i < posts.size(); i++) {\n            Map<String, Object> post = (Map<String, Object>) posts.get(i);\n            System.out.println("Post " + (i + 1) + ": " + post.get("title"));\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"parse-array-to-pojo-list",children:"Parse Array to POJO List"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\nimport java.util.List;\n\npublic class PojoArrayExample {\n    public static void main(String[] args) {\n        // Get JSON array and parse to List<Post>\n        List<Object> postsObj = Api.get("https://jsonplaceholder.typicode.com/posts")\n            .query("userId", 1)\n            .query("_limit", 3)\n            .execute()\n            .toList();\n        \n        // Convert to List<Post> manually\n        List<Post> posts = new ArrayList<>();\n        for (Object postObj : postsObj) {\n            Map<String, Object> postMap = (Map<String, Object>) postObj;\n            Post post = new Post();\n            post.id = (Integer) postMap.get("id");\n            post.userId = (Integer) postMap.get("userId");\n            post.title = (String) postMap.get("title");\n            post.body = (String) postMap.get("body");\n            posts.add(post);\n        }\n        \n        posts.forEach(p -> System.out.println("Post: " + p.title));\n    }\n    \n    public static class Post {\n        public int id;\n        public int userId;\n        public String title;\n        public String body;\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"request-body-serialization",children:"Request Body Serialization"}),"\n",(0,i.jsx)(n.h3,{id:"java-example-1",children:"Java Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\nimport java.util.Map;\nimport java.util.HashMap;\n\npublic class RequestBodyExample {\n    public static void main(String[] args) {\n        // Create request body as Map\n        Map<String, Object> newPost = new HashMap<>();\n        newPost.put("title", "My New Post");\n        newPost.put("body", "This is the content of my new post.");\n        newPost.put("userId", 1);\n        \n        // Send POST request\n        ApiResponse response = Api.post("https://jsonplaceholder.typicode.com/posts")\n            .body(newPost)\n            .execute();\n        \n        System.out.println("Status: " + response.code());\n        System.out.println("Response: " + response.body());\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"kotlin-example-1",children:"Kotlin Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.mochaapi.client.*\n\nfun main() {\n    // Create request body as Map\n    val newPost = mapOf(\n        "title" to "My Kotlin Post",\n        "body" to "This post was created from Kotlin!",\n        "userId" to 1\n    )\n    \n    // Send POST request\n    val response = Api.post("https://jsonplaceholder.typicode.com/posts")\n        .body(newPost)\n        .execute()\n    \n    println("Status: ${response.code()}")\n    println("Response: ${response.body()}")\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"custom-json-mappers",children:"Custom JSON Mappers"}),"\n",(0,i.jsx)(n.p,{children:"MochaAPI Client supports custom JSON mappers for advanced use cases:"}),"\n",(0,i.jsx)(n.h3,{id:"using-jackson-directly",children:"Using Jackson Directly"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"import io.mochaapi.client.*;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.DeserializationFeature;\n\npublic class CustomMapperExample {\n    public static void main(String[] args) {\n        // Create custom ObjectMapper\n        ObjectMapper customMapper = new ObjectMapper();\n        customMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n        \n        // Use custom mapper\n        JacksonJsonMapper jsonMapper = new JacksonJsonMapper(customMapper);\n        \n        // This would require modifying the library to accept custom mappers\n        // For now, the default mapper handles most use cases\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling-for-json",children:"Error Handling for JSON"}),"\n",(0,i.jsx)(n.h3,{id:"handling-json-parsing-errors",children:"Handling JSON Parsing Errors"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\nimport io.mochaapi.client.exception.*;\n\npublic class JsonErrorHandling {\n    public static void main(String[] args) {\n        try {\n            // This might fail if JSON is malformed\n            Map<String, Object> data = Api.get("https://jsonplaceholder.typicode.com/posts/1")\n                .execute()\n                .toMap();\n            \n            System.out.println("Success: " + data.get("title"));\n            \n        } catch (JsonException e) {\n            System.err.println("JSON Parsing Error: " + e.getMessage());\n            System.err.println("Cause: " + e.getCause());\n        } catch (ApiException e) {\n            System.err.println("API Error: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"handling-missing-fields",children:"Handling Missing Fields"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\npublic class MissingFieldHandling {\n    public static void main(String[] args) {\n        Map<String, Object> data = Api.get("https://jsonplaceholder.typicode.com/posts/1")\n            .execute()\n            .toMap();\n        \n        // Safe field access\n        String title = (String) data.getOrDefault("title", "No title");\n        Integer id = (Integer) data.getOrDefault("id", 0);\n        \n        System.out.println("Title: " + title);\n        System.out.println("ID: " + id);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-use-pojos-for-type-safety",children:"1. Use POJOs for Type Safety"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// \u2705 Good: Type-safe POJO\nPost post = response.to(Post.class);\nSystem.out.println(post.title);\n\n// \u274c Avoid: Unsafe Map access\nMap<String, Object> data = response.toMap();\nSystem.out.println((String) data.get("title")); // Cast required\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-handle-null-values",children:"2. Handle Null Values"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// \u2705 Good: Null-safe access\nString title = post.title != null ? post.title : "No title";\n\n// \u274c Avoid: Potential NullPointerException\nSystem.out.println(post.title.length());\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-use-appropriate-data-types",children:"3. Use Appropriate Data Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// \u2705 Good: Correct field types\npublic static class Post {\n    public int id;           // int for numbers\n    public String title;     // String for text\n    public boolean published; // boolean for flags\n}\n\n// \u274c Avoid: Wrong types\npublic static class Post {\n    public String id;        // Should be int\n    public int title;        // Should be String\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/MochaJSON/usage/java-examples",children:"Java Examples"})})," - Complete Java usage patterns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/MochaJSON/usage/kotlin-examples",children:"Kotlin Examples"})})," - Complete Kotlin usage patterns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/MochaJSON/api/overview",children:"API Reference"})})," - Complete API documentation"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);